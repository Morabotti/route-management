/*
 * This file is generated by jOOQ.
 */
package fi.morabotti.routemanagement.db.tables;


import fi.morabotti.routemanagement.db.DefaultSchema;
import fi.morabotti.routemanagement.db.Indexes;
import fi.morabotti.routemanagement.db.Keys;
import fi.morabotti.routemanagement.db.tables.records.PrimaryLocationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PrimaryLocation extends TableImpl<PrimaryLocationRecord> {

    private static final long serialVersionUID = -813742317;

    /**
     * The reference instance of <code>primary_location</code>
     */
    public static final PrimaryLocation PRIMARY_LOCATION = new PrimaryLocation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<PrimaryLocationRecord> getRecordType() {
        return PrimaryLocationRecord.class;
    }

    /**
     * The column <code>primary_location.id</code>.
     */
    public final TableField<PrimaryLocationRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>primary_location.person_id</code>.
     */
    public final TableField<PrimaryLocationRecord, Long> PERSON_ID = createField("person_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>primary_location.location_id</code>.
     */
    public final TableField<PrimaryLocationRecord, Long> LOCATION_ID = createField("location_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>primary_location</code> table reference
     */
    public PrimaryLocation() {
        this(DSL.name("primary_location"), null);
    }

    /**
     * Create an aliased <code>primary_location</code> table reference
     */
    public PrimaryLocation(String alias) {
        this(DSL.name(alias), PRIMARY_LOCATION);
    }

    /**
     * Create an aliased <code>primary_location</code> table reference
     */
    public PrimaryLocation(Name alias) {
        this(alias, PRIMARY_LOCATION);
    }

    private PrimaryLocation(Name alias, Table<PrimaryLocationRecord> aliased) {
        this(alias, aliased, null);
    }

    private PrimaryLocation(Name alias, Table<PrimaryLocationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> PrimaryLocation(Table<O> child, ForeignKey<O, PrimaryLocationRecord> key) {
        super(child, key, PRIMARY_LOCATION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRIMARY_LOCATION_FK_PRIMARY_LOCATION_LOCATION, Indexes.PRIMARY_LOCATION_FK_PRIMARY_LOCATION_PERSON, Indexes.PRIMARY_LOCATION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<PrimaryLocationRecord, Long> getIdentity() {
        return Keys.IDENTITY_PRIMARY_LOCATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<PrimaryLocationRecord>> getKeys() {
        return Arrays.<UniqueKey<PrimaryLocationRecord>>asList(Keys.KEY_PRIMARY_LOCATION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<PrimaryLocationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<PrimaryLocationRecord, ?>>asList(Keys.FK_PRIMARY_LOCATION_PERSON, Keys.FK_PRIMARY_LOCATION_LOCATION);
    }

    public Person person() {
        return new Person(this, Keys.FK_PRIMARY_LOCATION_PERSON);
    }

    public Location location() {
        return new Location(this, Keys.FK_PRIMARY_LOCATION_LOCATION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PrimaryLocation as(String alias) {
        return new PrimaryLocation(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public PrimaryLocation as(Name alias) {
        return new PrimaryLocation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public PrimaryLocation rename(String name) {
        return new PrimaryLocation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public PrimaryLocation rename(Name name) {
        return new PrimaryLocation(name, null);
    }
}
