/*
 * This file is generated by jOOQ.
 */
package fi.morabotti.routemanagement.db.tables;


import fi.morabotti.routemanagement.db.DefaultSchema;
import fi.morabotti.routemanagement.db.Indexes;
import fi.morabotti.routemanagement.db.Keys;
import fi.morabotti.routemanagement.db.tables.records.VehicleRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Vehicle extends TableImpl<VehicleRecord> {

    private static final long serialVersionUID = -1807304900;

    /**
     * The reference instance of <code>vehicle</code>
     */
    public static final Vehicle VEHICLE = new Vehicle();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VehicleRecord> getRecordType() {
        return VehicleRecord.class;
    }

    /**
     * The column <code>vehicle.id</code>.
     */
    public final TableField<VehicleRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    /**
     * The column <code>vehicle.license_number</code>.
     */
    public final TableField<VehicleRecord, String> LICENSE_NUMBER = createField("license_number", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), this, "");

    /**
     * The column <code>vehicle.deleted_at</code>.
     */
    public final TableField<VehicleRecord, Timestamp> DELETED_AT = createField("deleted_at", org.jooq.impl.SQLDataType.TIMESTAMP.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>vehicle</code> table reference
     */
    public Vehicle() {
        this(DSL.name("vehicle"), null);
    }

    /**
     * Create an aliased <code>vehicle</code> table reference
     */
    public Vehicle(String alias) {
        this(DSL.name(alias), VEHICLE);
    }

    /**
     * Create an aliased <code>vehicle</code> table reference
     */
    public Vehicle(Name alias) {
        this(alias, VEHICLE);
    }

    private Vehicle(Name alias, Table<VehicleRecord> aliased) {
        this(alias, aliased, null);
    }

    private Vehicle(Name alias, Table<VehicleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Vehicle(Table<O> child, ForeignKey<O, VehicleRecord> key) {
        super(child, key, VEHICLE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.VEHICLE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<VehicleRecord, Long> getIdentity() {
        return Keys.IDENTITY_VEHICLE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<VehicleRecord>> getKeys() {
        return Arrays.<UniqueKey<VehicleRecord>>asList(Keys.KEY_VEHICLE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Vehicle as(String alias) {
        return new Vehicle(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Vehicle as(Name alias) {
        return new Vehicle(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Vehicle rename(String name) {
        return new Vehicle(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Vehicle rename(Name name) {
        return new Vehicle(name, null);
    }
}
